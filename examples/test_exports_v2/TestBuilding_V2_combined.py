import openseespy.opensees as ops
import numpy as np

def build_model():
    # Clear previous model
    ops.wipe()
    ops.model('basic', '-ndm', 3, '-ndf', 6)

    # Model parameters
    L, B = 18.0, 12.0  # Dimensions
    nx, ny = 3, 3  # Grid axes
    E = 2509980.0796022266  # Elastic modulus
    nu = 0.2  # Poisson's ratio
    G = 1045825.0331675945  # Shear modulus (calculated)
    rho = 0.24464831804281342  # Density

    # Create nodes
    ops.node(1, 0.0, 0.0, 0.0)
    ops.node(2, 6.0, 0.0, 0.0)
    ops.node(3, 12.0, 0.0, 0.0)
    ops.node(4, 18.0, 0.0, 0.0)
    ops.node(5, 0.0, 4.0, 0.0)
    ops.node(6, 6.0, 4.0, 0.0)
    ops.node(7, 12.0, 4.0, 0.0)
    ops.node(8, 18.0, 4.0, 0.0)
    ops.node(9, 0.0, 8.0, 0.0)
    ops.node(10, 6.0, 8.0, 0.0)
    ops.node(11, 12.0, 8.0, 0.0)
    ops.node(12, 18.0, 8.0, 0.0)
    ops.node(13, 0.0, 12.0, 0.0)
    ops.node(14, 6.0, 12.0, 0.0)
    ops.node(15, 12.0, 12.0, 0.0)
    ops.node(16, 18.0, 12.0, 0.0)
    ops.node(17, 0.0, 0.0, 3.0)
    ops.node(18, 6.0, 0.0, 3.0)
    ops.node(19, 12.0, 0.0, 3.0)
    ops.node(20, 18.0, 0.0, 3.0)
    ops.node(21, 0.0, 4.0, 3.0)
    ops.node(22, 6.0, 4.0, 3.0)
    ops.node(23, 12.0, 4.0, 3.0)
    ops.node(24, 18.0, 4.0, 3.0)
    ops.node(25, 0.0, 8.0, 3.0)
    ops.node(26, 6.0, 8.0, 3.0)
    ops.node(27, 12.0, 8.0, 3.0)
    ops.node(28, 18.0, 8.0, 3.0)
    ops.node(29, 0.0, 12.0, 3.0)
    ops.node(30, 6.0, 12.0, 3.0)
    ops.node(31, 12.0, 12.0, 3.0)
    ops.node(32, 18.0, 12.0, 3.0)
    ops.node(33, 0.0, 0.0, 6.0)
    ops.node(34, 6.0, 0.0, 6.0)
    ops.node(35, 12.0, 0.0, 6.0)
    ops.node(36, 18.0, 0.0, 6.0)
    ops.node(37, 0.0, 4.0, 6.0)
    ops.node(38, 6.0, 4.0, 6.0)
    ops.node(39, 12.0, 4.0, 6.0)
    ops.node(40, 18.0, 4.0, 6.0)
    ops.node(41, 0.0, 8.0, 6.0)
    ops.node(42, 6.0, 8.0, 6.0)
    ops.node(43, 12.0, 8.0, 6.0)
    ops.node(44, 18.0, 8.0, 6.0)
    ops.node(45, 0.0, 12.0, 6.0)
    ops.node(46, 6.0, 12.0, 6.0)
    ops.node(47, 12.0, 12.0, 6.0)
    ops.node(48, 18.0, 12.0, 6.0)
    ops.node(49, 0.0, 0.0, 9.0)
    ops.node(50, 6.0, 0.0, 9.0)
    ops.node(51, 12.0, 0.0, 9.0)
    ops.node(52, 18.0, 0.0, 9.0)
    ops.node(53, 0.0, 4.0, 9.0)
    ops.node(54, 6.0, 4.0, 9.0)
    ops.node(55, 12.0, 4.0, 9.0)
    ops.node(56, 18.0, 4.0, 9.0)
    ops.node(57, 0.0, 8.0, 9.0)
    ops.node(58, 6.0, 8.0, 9.0)
    ops.node(59, 12.0, 8.0, 9.0)
    ops.node(60, 18.0, 8.0, 9.0)
    ops.node(61, 0.0, 12.0, 9.0)
    ops.node(62, 6.0, 12.0, 9.0)
    ops.node(63, 12.0, 12.0, 9.0)
    ops.node(64, 18.0, 12.0, 9.0)

    # Create materials and sections
    ops.section('ElasticMembranePlateSection', 1, 2509980.0796022266, 0.2, 0.1, 0.24464831804281342)
    # Column: 0.5x0.5
    ops.section('Elastic', 2, 2509980.0796022266, 0.25, 0.005208333333333333, 0.005208333333333333, 1045825.0331675945, 0.008802083333333334)
    # Beam: 0.3x0.5
    ops.section('Elastic', 3, 2509980.0796022266, 0.15, 0.0031249999999999997, 0.001125, 1045825.0331675945, 0.0028173707999999994)

    # Geometric transformations
    ops.geomTransf('Linear', 4, 0, 1, 0)
    ops.geomTransf('Linear', 5, 0, 0, 1)

    # Create elements
    ops.element('ShellMITC4', 1, *[17, 18, 22, 21], 1)
    ops.element('ShellMITC4', 2, *[18, 19, 23, 22], 1)
    ops.element('ShellMITC4', 3, *[19, 20, 24, 23], 1)
    ops.element('ShellMITC4', 4, *[21, 22, 26, 25], 1)
    ops.element('ShellMITC4', 5, *[22, 23, 27, 26], 1)
    ops.element('ShellMITC4', 6, *[23, 24, 28, 27], 1)
    ops.element('ShellMITC4', 7, *[25, 26, 30, 29], 1)
    ops.element('ShellMITC4', 8, *[26, 27, 31, 30], 1)
    ops.element('ShellMITC4', 9, *[27, 28, 32, 31], 1)
    ops.element('ShellMITC4', 10, *[33, 34, 38, 37], 1)
    ops.element('ShellMITC4', 11, *[34, 35, 39, 38], 1)
    ops.element('ShellMITC4', 12, *[35, 36, 40, 39], 1)
    ops.element('ShellMITC4', 13, *[37, 38, 42, 41], 1)
    ops.element('ShellMITC4', 14, *[38, 39, 43, 42], 1)
    ops.element('ShellMITC4', 15, *[39, 40, 44, 43], 1)
    ops.element('ShellMITC4', 16, *[41, 42, 46, 45], 1)
    ops.element('ShellMITC4', 17, *[42, 43, 47, 46], 1)
    ops.element('ShellMITC4', 18, *[43, 44, 48, 47], 1)
    ops.element('ShellMITC4', 19, *[49, 50, 54, 53], 1)
    ops.element('ShellMITC4', 20, *[50, 51, 55, 54], 1)
    ops.element('ShellMITC4', 21, *[51, 52, 56, 55], 1)
    ops.element('ShellMITC4', 22, *[53, 54, 58, 57], 1)
    ops.element('ShellMITC4', 23, *[54, 55, 59, 58], 1)
    ops.element('ShellMITC4', 24, *[55, 56, 60, 59], 1)
    ops.element('ShellMITC4', 25, *[57, 58, 62, 61], 1)
    ops.element('ShellMITC4', 26, *[58, 59, 63, 62], 1)
    ops.element('ShellMITC4', 27, *[59, 60, 64, 63], 1)
    ops.element('elasticBeamColumn', 28, *[1, 17], 2, 4)
    ops.element('elasticBeamColumn', 29, *[17, 33], 2, 4)
    ops.element('elasticBeamColumn', 30, *[33, 49], 2, 4)
    ops.element('elasticBeamColumn', 31, *[2, 18], 2, 4)
    ops.element('elasticBeamColumn', 32, *[18, 34], 2, 4)
    ops.element('elasticBeamColumn', 33, *[34, 50], 2, 4)
    ops.element('elasticBeamColumn', 34, *[3, 19], 2, 4)
    ops.element('elasticBeamColumn', 35, *[19, 35], 2, 4)
    ops.element('elasticBeamColumn', 36, *[35, 51], 2, 4)
    ops.element('elasticBeamColumn', 37, *[4, 20], 2, 4)
    ops.element('elasticBeamColumn', 38, *[20, 36], 2, 4)
    ops.element('elasticBeamColumn', 39, *[36, 52], 2, 4)
    ops.element('elasticBeamColumn', 40, *[5, 21], 2, 4)
    ops.element('elasticBeamColumn', 41, *[21, 37], 2, 4)
    ops.element('elasticBeamColumn', 42, *[37, 53], 2, 4)
    ops.element('elasticBeamColumn', 43, *[6, 22], 2, 4)
    ops.element('elasticBeamColumn', 44, *[22, 38], 2, 4)
    ops.element('elasticBeamColumn', 45, *[38, 54], 2, 4)
    ops.element('elasticBeamColumn', 46, *[7, 23], 2, 4)
    ops.element('elasticBeamColumn', 47, *[23, 39], 2, 4)
    ops.element('elasticBeamColumn', 48, *[39, 55], 2, 4)
    ops.element('elasticBeamColumn', 49, *[8, 24], 2, 4)
    ops.element('elasticBeamColumn', 50, *[24, 40], 2, 4)
    ops.element('elasticBeamColumn', 51, *[40, 56], 2, 4)
    ops.element('elasticBeamColumn', 52, *[9, 25], 2, 4)
    ops.element('elasticBeamColumn', 53, *[25, 41], 2, 4)
    ops.element('elasticBeamColumn', 54, *[41, 57], 2, 4)
    ops.element('elasticBeamColumn', 55, *[10, 26], 2, 4)
    ops.element('elasticBeamColumn', 56, *[26, 42], 2, 4)
    ops.element('elasticBeamColumn', 57, *[42, 58], 2, 4)
    ops.element('elasticBeamColumn', 58, *[11, 27], 2, 4)
    ops.element('elasticBeamColumn', 59, *[27, 43], 2, 4)
    ops.element('elasticBeamColumn', 60, *[43, 59], 2, 4)
    ops.element('elasticBeamColumn', 61, *[12, 28], 2, 4)
    ops.element('elasticBeamColumn', 62, *[28, 44], 2, 4)
    ops.element('elasticBeamColumn', 63, *[44, 60], 2, 4)
    ops.element('elasticBeamColumn', 64, *[13, 29], 2, 4)
    ops.element('elasticBeamColumn', 65, *[29, 45], 2, 4)
    ops.element('elasticBeamColumn', 66, *[45, 61], 2, 4)
    ops.element('elasticBeamColumn', 67, *[14, 30], 2, 4)
    ops.element('elasticBeamColumn', 68, *[30, 46], 2, 4)
    ops.element('elasticBeamColumn', 69, *[46, 62], 2, 4)
    ops.element('elasticBeamColumn', 70, *[15, 31], 2, 4)
    ops.element('elasticBeamColumn', 71, *[31, 47], 2, 4)
    ops.element('elasticBeamColumn', 72, *[47, 63], 2, 4)
    ops.element('elasticBeamColumn', 73, *[16, 32], 2, 4)
    ops.element('elasticBeamColumn', 74, *[32, 48], 2, 4)
    ops.element('elasticBeamColumn', 75, *[48, 64], 2, 4)
    ops.element('elasticBeamColumn', 76, *[17, 18], 3, 5)
    ops.element('elasticBeamColumn', 77, *[18, 19], 3, 5)
    ops.element('elasticBeamColumn', 78, *[19, 20], 3, 5)
    ops.element('elasticBeamColumn', 79, *[21, 22], 3, 5)
    ops.element('elasticBeamColumn', 80, *[22, 23], 3, 5)
    ops.element('elasticBeamColumn', 81, *[23, 24], 3, 5)
    ops.element('elasticBeamColumn', 82, *[25, 26], 3, 5)
    ops.element('elasticBeamColumn', 83, *[26, 27], 3, 5)
    ops.element('elasticBeamColumn', 84, *[27, 28], 3, 5)
    ops.element('elasticBeamColumn', 85, *[29, 30], 3, 5)
    ops.element('elasticBeamColumn', 86, *[30, 31], 3, 5)
    ops.element('elasticBeamColumn', 87, *[31, 32], 3, 5)
    ops.element('elasticBeamColumn', 88, *[17, 21], 3, 5)
    ops.element('elasticBeamColumn', 89, *[18, 22], 3, 5)
    ops.element('elasticBeamColumn', 90, *[19, 23], 3, 5)
    ops.element('elasticBeamColumn', 91, *[20, 24], 3, 5)
    ops.element('elasticBeamColumn', 92, *[21, 25], 3, 5)
    ops.element('elasticBeamColumn', 93, *[22, 26], 3, 5)
    ops.element('elasticBeamColumn', 94, *[23, 27], 3, 5)
    ops.element('elasticBeamColumn', 95, *[24, 28], 3, 5)
    ops.element('elasticBeamColumn', 96, *[25, 29], 3, 5)
    ops.element('elasticBeamColumn', 97, *[26, 30], 3, 5)
    ops.element('elasticBeamColumn', 98, *[27, 31], 3, 5)
    ops.element('elasticBeamColumn', 99, *[28, 32], 3, 5)
    ops.element('elasticBeamColumn', 100, *[33, 34], 3, 5)
    ops.element('elasticBeamColumn', 101, *[34, 35], 3, 5)
    ops.element('elasticBeamColumn', 102, *[35, 36], 3, 5)
    ops.element('elasticBeamColumn', 103, *[37, 38], 3, 5)
    ops.element('elasticBeamColumn', 104, *[38, 39], 3, 5)
    ops.element('elasticBeamColumn', 105, *[39, 40], 3, 5)
    ops.element('elasticBeamColumn', 106, *[41, 42], 3, 5)
    ops.element('elasticBeamColumn', 107, *[42, 43], 3, 5)
    ops.element('elasticBeamColumn', 108, *[43, 44], 3, 5)
    ops.element('elasticBeamColumn', 109, *[45, 46], 3, 5)
    ops.element('elasticBeamColumn', 110, *[46, 47], 3, 5)
    ops.element('elasticBeamColumn', 111, *[47, 48], 3, 5)
    ops.element('elasticBeamColumn', 112, *[33, 37], 3, 5)
    ops.element('elasticBeamColumn', 113, *[34, 38], 3, 5)
    ops.element('elasticBeamColumn', 114, *[35, 39], 3, 5)
    ops.element('elasticBeamColumn', 115, *[36, 40], 3, 5)
    ops.element('elasticBeamColumn', 116, *[37, 41], 3, 5)
    ops.element('elasticBeamColumn', 117, *[38, 42], 3, 5)
    ops.element('elasticBeamColumn', 118, *[39, 43], 3, 5)
    ops.element('elasticBeamColumn', 119, *[40, 44], 3, 5)
    ops.element('elasticBeamColumn', 120, *[41, 45], 3, 5)
    ops.element('elasticBeamColumn', 121, *[42, 46], 3, 5)
    ops.element('elasticBeamColumn', 122, *[43, 47], 3, 5)
    ops.element('elasticBeamColumn', 123, *[44, 48], 3, 5)
    ops.element('elasticBeamColumn', 124, *[49, 50], 3, 5)
    ops.element('elasticBeamColumn', 125, *[50, 51], 3, 5)
    ops.element('elasticBeamColumn', 126, *[51, 52], 3, 5)
    ops.element('elasticBeamColumn', 127, *[53, 54], 3, 5)
    ops.element('elasticBeamColumn', 128, *[54, 55], 3, 5)
    ops.element('elasticBeamColumn', 129, *[55, 56], 3, 5)
    ops.element('elasticBeamColumn', 130, *[57, 58], 3, 5)
    ops.element('elasticBeamColumn', 131, *[58, 59], 3, 5)
    ops.element('elasticBeamColumn', 132, *[59, 60], 3, 5)
    ops.element('elasticBeamColumn', 133, *[61, 62], 3, 5)
    ops.element('elasticBeamColumn', 134, *[62, 63], 3, 5)
    ops.element('elasticBeamColumn', 135, *[63, 64], 3, 5)
    ops.element('elasticBeamColumn', 136, *[49, 53], 3, 5)
    ops.element('elasticBeamColumn', 137, *[50, 54], 3, 5)
    ops.element('elasticBeamColumn', 138, *[51, 55], 3, 5)
    ops.element('elasticBeamColumn', 139, *[52, 56], 3, 5)
    ops.element('elasticBeamColumn', 140, *[53, 57], 3, 5)
    ops.element('elasticBeamColumn', 141, *[54, 58], 3, 5)
    ops.element('elasticBeamColumn', 142, *[55, 59], 3, 5)
    ops.element('elasticBeamColumn', 143, *[56, 60], 3, 5)
    ops.element('elasticBeamColumn', 144, *[57, 61], 3, 5)
    ops.element('elasticBeamColumn', 145, *[58, 62], 3, 5)
    ops.element('elasticBeamColumn', 146, *[59, 63], 3, 5)
    ops.element('elasticBeamColumn', 147, *[60, 64], 3, 5)

    # Apply base constraints
    ops.fix(1, 1, 1, 1, 1, 1, 1)
    ops.fix(2, 1, 1, 1, 1, 1, 1)
    ops.fix(3, 1, 1, 1, 1, 1, 1)
    ops.fix(4, 1, 1, 1, 1, 1, 1)
    ops.fix(5, 1, 1, 1, 1, 1, 1)
    ops.fix(6, 1, 1, 1, 1, 1, 1)
    ops.fix(7, 1, 1, 1, 1, 1, 1)
    ops.fix(8, 1, 1, 1, 1, 1, 1)
    ops.fix(9, 1, 1, 1, 1, 1, 1)
    ops.fix(10, 1, 1, 1, 1, 1, 1)
    ops.fix(11, 1, 1, 1, 1, 1, 1)
    ops.fix(12, 1, 1, 1, 1, 1, 1)
    ops.fix(13, 1, 1, 1, 1, 1, 1)
    ops.fix(14, 1, 1, 1, 1, 1, 1)
    ops.fix(15, 1, 1, 1, 1, 1, 1)
    ops.fix(16, 1, 1, 1, 1, 1, 1)

    # Apply loads
    ops.timeSeries('Linear', 1)
    ops.pattern('Plain', 1, 1)
    ops.load(49, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0)
    ops.load(50, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0)
    ops.load(51, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0)
    ops.load(52, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0)
    ops.load(53, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0)
    ops.load(54, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0)
    ops.load(55, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0)
    ops.load(56, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0)
    ops.load(57, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0)
    ops.load(58, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0)
    ops.load(59, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0)
    ops.load(60, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0)
    ops.load(61, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0)
    ops.load(62, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0)
    ops.load(63, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0)
    ops.load(64, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0)

def run_analysis():
    print('\n--- Starting Static Analysis ---')
    try:
        ops.system('BandGeneral')
        ops.numberer('RCM')
        ops.constraints('Plain')
        ops.integrator('LoadControl', 1.0 / 15)
        ops.algorithm('Linear')
        ops.analysis('Static')
        ops.analyze(15)
        print('Static analysis completed successfully.')
    except Exception as e:
        print(f'Error in static analysis: {e}')

    print('\n--- Starting Modal Analysis ---')
    try:
        ops.setTime(0.0)
        ops.remove('loadPattern', 1)

        num_modes = 10
        eigen_values = ops.eigen(num_modes)
        print('Modal Periods (s):')
        for i, val in enumerate(eigen_values):
            if val > 1e-6:
                freq = np.sqrt(val) / (2 * np.pi)
                period = 1.0 / freq
                print(f'  - Mode {i+1}: {period:.4f} s')
        print('Modal analysis completed successfully.')
    except Exception as e:
        print(f'Error in modal analysis: {e}')


if __name__ == '__main__':
    build_model()
    print('Model built successfully.')
    run_analysis()